{"version":3,"sources":["application/student.png","logo.svg","components/SplashPage.js","onboarding/Body.js","application/Item.js","application/MainApp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SplashPage","this","props","currStep","class","Badge","variant","pill","up","title","cascade","id","Button","onClick","next","right","src","image","React","Component","Body","useState","name","setName","Fragment","Form","onSubmit","event","updateState","Row","Group","as","Col","controlId","Label","Control","type","placeholder","inputRef","ref","_firstName","onChange","target","value","handleInputs","lastName","_lastName","email","_Email","password","_Password","step","startTime","_startTime","endTime","_endTime","assignmentDays","_assignmentDays","examDays","_examDays","start","size","Item","due","MainApp","newInput","setnewInput","show","setShow","handleClose","_course","setCourse","_type","setType","_due","setDue","_name","handleChange","Container","sm","left","Media","width","height","className","Avatar","alt","map","newInputs","Modal","onHide","Header","closeButton","Title","Footer","x","push","console","log","handleSubmit","App","_next","cstep","state","currentStep","setState","_startApp","firstName","greeting","bind","preventDefault","fetch","encodeURIComponent","then","response","json","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fefcbf26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/student.513fa4d4.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, Fragment } from \"react\";\r\n\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\nclass SplashPage extends React.Component {\r\n  render() {\r\n    if (this.props.currStep != 1) return null;\r\n    return (\r\n      <div class=\"main\">\r\n        <Badge variant=\"dark\">\r\n          Made for full screen desktop views\r\n        </Badge>\r\n        <br />\r\n        <Badge pill variant=\"primary\">\r\n          36-Hour Hackathon\r\n        </Badge>\r\n        <h1>\r\n          <b>\r\n            Time Block <br />\r\n            Your Life\r\n          </b>\r\n          <br />\r\n          <br />\r\n        </h1>\r\n\r\n        <div class=\"intro\">\r\n          <Fade up>\r\n            <h2>{this.props.title}</h2>\r\n          </Fade>\r\n\r\n          <Fade up cascade>\r\n            <div id=\"opening-text\">\r\n              <p>\r\n                Why put tasks in a to-do list and forget to do them, when you\r\n                can schedule them automatically in your calendar?\r\n              </p>\r\n              <p>\r\n                With Time Blocker, your calendar will automatically block off\r\n                time in advance for you to study and work on your school\r\n                assignments and exams.\r\n              </p>\r\n            </div>\r\n          </Fade>\r\n\r\n          <Fade up>\r\n            <Button variant=\"outline-primary\" onClick={this.props.next}>\r\n              Get Started!\r\n            </Button>\r\n          </Fade>\r\n\r\n          <Fade right>\r\n            <img src={\"./images/\" + this.props.image} id=\"header-image\" />\r\n          </Fade>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SplashPage;\r\n","import React, { useState } from \"react\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormCheck from \"react-bootstrap/FormCheck\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Body = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const handleInputs = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const submitName = e => {\r\n    props.start(name);\r\n  };\r\n\r\n  const updateState = () => {\r\n    props.start(this._firstName);\r\n  };\r\n\r\n  if (props.currStep != 2) return null;\r\n  return (\r\n    <React.Fragment>\r\n      <div class=\"main\" id=\"input-override\">\r\n        <div class=\"form-item logo-header\">\r\n          <h1>\r\n            <b>\r\n              Time Block <br />\r\n              Your Life\r\n            </b>\r\n          </h1>\r\n        </div>\r\n\r\n        <div class=\"form-item\">\r\n          <h1>Sign Up</h1>\r\n          <p>\r\n            <i>All settings can be changed later</i>\r\n          </p>\r\n\r\n          <Form onSubmit={event => this.updateState()}>\r\n            <Fade>\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                  <Form.Label>First Name</Form.Label>\r\n                  <Form.Control\r\n                    id=\"firstInput\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter First Name Here\"\r\n                    inputRef={ref => {\r\n                      this._firstName = ref;\r\n                    }}\r\n                    onChange={event => handleInputs(event)}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridLastName\">\r\n                  <Form.Label>Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={props.lastName}\r\n                    inputRef={ref => {\r\n                      this._lastName = ref;\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n            </Fade>\r\n\r\n            <Fade>\r\n              <Form.Group controlId=\"formGridEmail\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  value={props.email}\r\n                  inputRef={ref => {\r\n                    this._Email = ref;\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </Fade>\r\n\r\n            <Fade>\r\n              <Form.Group controlId=\"formGridPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  value={props.password}\r\n                  inputRef={ref => {\r\n                    this._Password = ref;\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </Fade>\r\n\r\n            <Fade>\r\n              <p>\r\n                <br />\r\n                Tell us when you want us to schedule your tasks! (24 hour time)\r\n              </p>\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridStartTime\">\r\n                  <Form.Label>Start Time</Form.Label>\r\n                  <Form.Label>For Assignments?</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    step=\"1\"\r\n                    value={props.startTime}\r\n                    inputRef={ref => {\r\n                      this._startTime = ref;\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridEndTime\">\r\n                  <Form.Label>Ending Time</Form.Label>\r\n                  <Form.Label>For Assignments?</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    step=\"1\"\r\n                    value={props.endTime}\r\n                    inputRef={ref => {\r\n                      this._endTime = ref;\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n            </Fade>\r\n\r\n            <Fade>\r\n              <p>\r\n                <br />\r\n                How many <b>days</b> in advance do you want to start tasks?\r\n                <br />\r\n                <i>This can be adjusted on a case-by-case basis</i>\r\n              </p>\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"advanceAssignments\">\r\n                  <Form.Label>For Assignments?</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    step=\"1\"\r\n                    value={props.assignmentDays}\r\n                    inputRef={ref => {\r\n                      this._assignmentDays = ref;\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridExamTime\">\r\n                  <Form.Label>For Exams?</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    step=\"1\"\r\n                    value={props.examDays}\r\n                    inputRef={ref => {\r\n                      this._examDays = ref;\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n            </Fade>\r\n\r\n            <Fade up>\r\n              <Button variant=\"success\" onClick={() => submitName()} size=\"lg\">\r\n                Start Blocking!\r\n              </Button>\r\n            </Fade>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React, { useState, Fragment } from \"react\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Media from \"react-bootstrap/Media\";\r\n\r\nconst Item = (props) => {\r\n  return (\r\n    <div class=\"task-item\">\r\n      <h5>{props.class}</h5>\r\n      <h4>{props.name}</h4>\r\n\r\n      <p>{props.due}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React, { useState, Fragment } from \"react\";\r\n\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormCheck from \"react-bootstrap/FormCheck\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Media from \"react-bootstrap/Media\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\r\n\r\nimport Avatar from \"./student.png\";\r\nimport axios from \"axios\";\r\n\r\nimport Item from \"./Item.js\";\r\n\r\nconst MainApp = props => {\r\n  const [newInput, setnewInput] = useState([\r\n    {\r\n      class: \"CS2214b\",\r\n      type: \"Exam\",\r\n      due: \"2020-01-23\",\r\n      name: \"Assignment 2 - Python\"\r\n    },\r\n    { class: \"CS2212b\", type: \"Assignment\", due: \"2020-01-20\", name: \"Assignment 3\" },\r\n    {\r\n      class: \"WRITING2111G\",\r\n      type: \"Assignment\",\r\n      due: \"2020-02-01\",\r\n      name: \"Illiad Essay\"\r\n    },\r\n    {\r\n      class: \"BUS2257\",\r\n      type: \"Exam\",\r\n      due: \"2020-02-03\",\r\n      name: \"Feasibility Study\"\r\n    },\r\n    { class: \"CS2214b\", type: \"Exam\", due: \"2020-02-04\", name: \"Midterm\" },\r\n    { class: \"CS2212b\", type: \"Exam\", due: \"2020-02-05\", name: \"Midterm\" },\r\n  ]);\r\n\r\n  const [ show, setShow ] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [ _course, setCourse] = useState(\"CS2209b\");\r\n  const [ _type, setType] = useState(\"Exam\");\r\n  const [ _due, setDue] = useState(\"2020-01-25\");\r\n  const [ _name, setName] = useState(\"\");\r\n\r\n  const handleDemo = () =>  {\r\n\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n      switch (event.target.id)    {\r\n          case \"course\":\r\n              setCourse(event.target.value)\r\n              break;\r\n          case \"type\":\r\n              setType(event.target.value)\r\n              break;\r\n          case \"due\":\r\n              setDue(event.target.value)\r\n              break;\r\n          default:\r\n              setName(event.target.value)\r\n      }\r\n  }\r\n\r\n  const handleSubmit = () =>  {\r\n    handleClose()\r\n\r\n    const x = [...newInput];\r\n    x.push({ class: _course, type: _type, due: _due, name: _name })\r\n\r\n    setnewInput(x);\r\n    console.log(newInput);\r\n  }\r\n\r\n  if (props.currStep != 3) return null;\r\n  return (\r\n    <React.Fragment>\r\n      <Container id=\"container-override\">\r\n        <Row>\r\n          <Col sm={2}>\r\n            <div class=\"side-bar\">\r\n              <div class=\"fitting\">\r\n                <Fade left>\r\n                  <Media>\r\n                    <img\r\n                      width={64}\r\n                      height={64}\r\n                      className=\"mr-3\"\r\n                      src={Avatar}\r\n                      alt=\"Profile Pic\"\r\n                    />\r\n                    <Media.Body>\r\n                      <h5>{props.name}</h5>\r\n                      <p>Western University</p>\r\n                    </Media.Body>\r\n                  </Media>\r\n                </Fade>\r\n\r\n                <div class=\"classwork\">\r\n                  <Fade left>\r\n                    <h4>\r\n                      Classes\r\n                      <br /> <br />\r\n                    </h4>\r\n                    <p>CS2212b</p>\r\n                    <p>CS2209b</p>\r\n                    <p>WRITING2111G</p>\r\n                    <p>CS2034b</p>\r\n                    <p>BUS2257</p>\r\n                  </Fade>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col sm={10}>\r\n            <div class=\"app-header\">\r\n              <Fade>\r\n                <h2>\r\n                  <b>Welcome back,</b> {props.name}!\r\n                </h2>\r\n              </Fade>\r\n            </div>\r\n            <div class=\"flex-container\">\r\n              {newInput.map(newInputs => (\r\n                <Fade up>\r\n                  <Item\r\n                    name={newInputs.name}\r\n                    class={newInputs.class}\r\n                    due={newInputs.due}\r\n                  />\r\n                </Fade>\r\n              ))}\r\n            </div>\r\n\r\n            <div id=\"add\">\r\n              <Button variant=\"success\" onClick={handleShow} size=\"lg\">\r\n                Add To-Do\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Enter In New Task</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control type=\"text\" id=\"name\" placeholder=\"Name of work\" onChange={event => handleChange(event)}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"course\">\r\n              <Form.Label>Select the course</Form.Label>\r\n              <Form.Control as=\"select\" id=\"course\" onChange={event => handleChange(event)}>\r\n                <option>CS2209b</option>\r\n                <option>CS2212b</option>\r\n                <option>CS2034b</option>\r\n                <option>BUS2257</option>\r\n                <option>WRITING2111G</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"type\">\r\n              <Form.Label>Type</Form.Label>\r\n              <Form.Control as=\"select\" id=\"type\" value=\"2020-03-14\" onChange={event => handleChange(event)}>\r\n                <option>Exam</option>\r\n                <option>Assignment</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"due\">\r\n              <Form.Label>Due Date</Form.Label>\r\n              <Form.Control type=\"text\" id=\"due\" value=\"2020-01-25\" onChange={event => handleChange(event)}/>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={() => handleSubmit()}>\r\n            Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainApp;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport SplashPage from \"./components/SplashPage.js\";\nimport Body from \"./onboarding/Body.js\";\nimport MainApp from \"./application/MainApp.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStep: 1,\n      firstName: \"Justin\",\n      lastName: \"Zhang\",\n      email: \"uofthacks@uofthacks.com\",\n      password: \"qwertyuiop\",\n      startTime: 8,\n      endTime: 18,\n      examDays: 14,\n      assignmentDays: 7,\n\n      name: \"\",\n      greeting: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch(`/api/greeting?name=${encodeURIComponent(this.state.name)}`)\n      .then(response => response.json())\n      .then(state => this.setState(state));\n  }\n  //Gets the app to the next screen\n  _next = () => {\n    let cstep = this.state.currentStep + 1;\n\n    this.setState(\n      {\n        currentStep: cstep\n      },\n      () => {\n        console.log(this.state.currStep);\n      }\n    );\n  };\n\n  _startApp = (_firstName) => {\n    this._next()\n    this.setState({\n      firstName: _firstName,\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <SplashPage\n          next={this._next}\n          currStep={this.state.currentStep}\n          title=\"What Is Time Blocking?\"\n          image=\"peopleworking.png\"\n        />\n\n        <Body\n          next={this._next}\n          start={this._startApp}\n          currStep={this.state.currentStep}\n          firstName={this.state.firstName}\n          lastName={this.state.lastName}\n          email={this.state.email}\n          password={this.state.password}\n          startTime={this.state.startTime}\n          endTime={this.state.endTime}\n          examDays={this.state.examDays}\n          assignmentDays={this.state.assignmentDays}\n        />\n\n        <MainApp\n          currStep={this.state.currentStep}\n          name={this.state.firstName}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}